import"./modulepreload-polyfill.B5Qt9EMX.js";const p=[{title:"Bachelor's in Computer Science (Informatikk)",year:"2022 - 2025",location:"NTNU Gløshaugen, Norway",description:"Pursuing a Bachelor's degree in Computer Science with a focus on software development and theoretical foundations of computing."},{title:"Unity and Game Development",year:"2021 - 2022",location:"Fana Folkehøgskole, Bergen",description:"Focused on programming in C# and Unity, with hands-on experience in game development."},{title:"Upper Secondary School",year:"2018 - 2021",location:"Mosjøen Videregående Skole, Norway",description:"Specialized in advanced courses, including Mathematics R1 and R2, Physics 1 and 2, Chemistry 1 and 2, Biology 1, and German 2, completed at an upper secondary school in Norway."}],u=[{title:"Intern at Elkjøp",location:"Mosjøen, Norway",year:"2020 - 2021",description:"Gained valuable experience in customer service, sales, and product knowledge, specifically within white goods."},{title:"Operator at Alcoa Mosjøen, Anode Factory",location:"Mosjøen, Norway",year:"2022 - 2024",description:"Gained experience in technical maintenance and teamwork in a demanding industrial environment."}],m=[{name:"Java",level:80},{name:"JavaScript",level:75},{name:"Unity / C#",level:65},{name:"Web Development",level:60},{name:"Python",level:50},{name:"C/C++",level:50},{name:"React / TypeScript",level:50},{name:"Low-Level Programming (Assembly)",level:40}],g=[{category:"featured",title:"Personal Website",description:"A portfolio website built to showcase my skills and projects.",languages:["HTML","CSS","JavaScript"],link:"https://github.com/Ulvang01/Ulvang01.github.io"},{category:"featured",title:"Color Ocean - WebTek Project",description:"A web technology project developed for IT2805. My primary role was creating the Color Scheme and Gradient Generator (ColorGen) functionality. This project involved implementing features for dynamic color generation and providing an intuitive interface for users. The repository includes CI/CD workflows for CodeQL and linting.",languages:["HTML","CSS","JavaScript"],link:"https://github.com/Ulvang01/WebTekProject"},{category:"featured",title:"TDT4140 - Software Engineering Project (2024)",description:"This repository contains the project developed for the TDT4140 Software Engineering course in 2024 by our team. It features an ice-breaker game finder where users can sort, favorite, and add ice-breaker games. Note: This may not be the final version due to limited access to my GitLab student account.",languages:["Java","Spring Boot","TypeScript","React","SQLite"],link:"https://github.com/Ulvang01/TDT4140-Software-Engineering-2024"},{category:"unity",title:"Wake Up",description:`This demo project, created during a game jam with collaborators Konrad Larsen and Thomas Price-Engen, is a darkly humorous, cinematic horror experience set in the Oval Office. Drawing inspiration from the tension surrounding the Trump vs. Biden election. Please note, it’s purely cinematic and serves as a unique exploration of atmosphere and humor in game design. 
 NB: password to the link is 'biden'`,languages:["C#","Unity"],link:"https://greatlemi.itch.io/wake-up"},{category:"unity",title:"Hotline Fana",description:"Hotline Fana is a top-down shooter inspired by the classic Hotline Miami, but with a unique twist: it's set in our own school building at Fana! Using 3D scans provided by Tobias Fehn, the game's environment authentically recreates the school’s layout, bringing a familiar setting to life with the intensity and action-packed gameplay of a shooter.",languages:["C#","Unity"],link:"https://tehepikdok.itch.io/hotline-fana-zombie-invasion"},{category:"other",title:"Coming soon...",description:"Other projects will be uploaded soon",languages:[""],link:"https://youtu.be/xvFZjo5PgG0"}];document.addEventListener("DOMContentLoaded",()=>{y(p),v(u),f(m),h(g);const n=document.querySelectorAll("section"),i=document.querySelectorAll(".nav-link"),e={root:null,rootMargin:"0px",threshold:.5},t=new IntersectionObserver(s=>{s.forEach(r=>{const c=r.target.getAttribute("id"),l=document.querySelector(`.nav-link[data-section="${c}"]`);r.isIntersecting&&(i.forEach(d=>d.classList.remove("active")),l.classList.add("active"))})},e);n.forEach(s=>t.observe(s));let o=window.scrollY;const a=document.querySelector("header");window.addEventListener("scroll",()=>{window.scrollY===0?a.style.top="0":window.scrollY>o?a.style.top="-80px":a.style.top="0",o=window.scrollY})});document.querySelectorAll(".nav-link").forEach(n=>{n.addEventListener("click",function(i){i.preventDefault();const e=this.getAttribute("href").substring(1),t=document.getElementById(e);window.scrollTo({top:t.offsetTop,behavior:"smooth"})})});function h(n){const i=document.getElementById("featured-projects").querySelector(".project-list"),e=document.getElementById("unity-projects").querySelector(".project-list"),t=document.getElementById("other-projects").querySelector(".project-list");n.forEach(o=>{const a=document.createElement("div");a.classList.add("project-item"),a.innerHTML=`
      <div class="project-header">
        <h4>${o.title}</h4>
        <a href="${o.link}" target="_blank" class="project-icon" title="View Project">
          <img src="./assets/images/external-link-symbol.png" alt="View Project">
        </a>
      </div>
      <p>${o.description}</p>
      <div class="languages">Languages: ${o.languages.join(", ")}</div>
    `,o.category==="featured"?i.appendChild(a):o.category==="unity"?e.appendChild(a):o.category==="other"&&t.appendChild(a)})}function y(n){const i=document.getElementById("education-list");n.forEach(e=>{const t=document.createElement("li");t.classList.add("education-item"),t.innerHTML=`
      <div class="education-header">
        <span class="education-title">${e.title}</span>
        <span class="education-year">${e.year}</span>
      </div>
      <span class="education-location">${e.location}</span>
      <p class="education-description">${e.description}</p>
    `,i.appendChild(t)})}function v(n){const i=document.getElementById("experience-list");n.forEach(e=>{const t=document.createElement("li");t.classList.add("experience-item"),t.innerHTML=`
      <div class="experience-header">
        <span class="experience-title">${e.title}</span>
        <span class="experience-year">${e.year}</span>
      </div>
      <span class="experience-location">${e.location}</span>
      <p class="experience-description">${e.description}</p>
    `,i.appendChild(t)})}function f(n){const i=document.getElementById("skills-list");n.forEach(e=>{const t=document.createElement("div");t.classList.add("skill"),t.innerHTML=`
      <span>${e.name}</span>
      <div class="progress-bar">
        <div class="progress" style="width: ${e.level}%;"></div>
      </div>
    `,i.appendChild(t)})}
